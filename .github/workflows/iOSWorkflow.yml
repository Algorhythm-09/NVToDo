name: iOS Workflow

on:
  push:
    branches:
      - 'release_v*'

jobs:
  build_and_release:
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Lint with SwiftLint
        run: swiftlint

        # Build and Tests are not working because of the swift package Issue
    - name: Build application
      run: |
        set -o pipefail && xcodebuild clean -scheme $SCHEME -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH build-for-testing | xcpretty --color --simple
    - name: Upload products
      uses: actions/checkout@v3
      with:
        name: Products
        path: DerivedData/Build/Products

    - name: Run unit tests
      run: |
        set -o pipefail && xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -enableCodeCoverage YES -only-testing:$UNIT_TEST_TARGET | xcpretty --color --simple

      - name: Create Tag and Release
        if: startsWith(github.ref, 'refs/heads/release_v') # Only execute for branches starting with "release_v"
        id: create_release
        run: |
          TAG_NAME=$(echo "${{ github.ref }}" | sed -E 's/refs\/heads\/release_v//')
          RELEASE_NAME="Release $TAG_NAME"
          RELEASE_BODY="This is the release for version $TAG_NAME"

          echo "Creating tag and release..."
          git tag -a "$TAG_NAME" -m "$RELEASE_NAME"
          git push origin "$TAG_NAME"

          echo "Creating GitHub release..."
          RELEASE_ID=$(gh release create "$TAG_NAME" --target "release" --title "$RELEASE_NAME" --notes "$RELEASE_BODY")
          if [[ "${{ github.ref }}" == *veryimportant ]]; then
            echo "This is a very important release"
            gh release update "$RELEASE_ID" --append-tag "very-important"
          fi
